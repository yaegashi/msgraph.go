// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// OutlookCategoryRequestBuilder is request builder for OutlookCategory
type OutlookCategoryRequestBuilder struct{ BaseRequestBuilder }

// Request returns OutlookCategoryRequest
func (b *OutlookCategoryRequestBuilder) Request() *OutlookCategoryRequest {
	return &OutlookCategoryRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OutlookCategoryRequest is request for OutlookCategory
type OutlookCategoryRequest struct{ BaseRequest }

// Get performs GET request for OutlookCategory
func (r *OutlookCategoryRequest) Get(ctx context.Context) (resObj *OutlookCategory, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OutlookCategory
func (r *OutlookCategoryRequest) Update(ctx context.Context, reqObj *OutlookCategory) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OutlookCategory
func (r *OutlookCategoryRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for OutlookCategory
func (r *OutlookCategoryRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj OutlookCategory
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for OutlookCategory
func (r *OutlookCategoryRequest) BatchUpdate(batch *BatchRequest, reqObj *OutlookCategory) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for OutlookCategory
func (r *OutlookCategoryRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// OutlookItemRequestBuilder is request builder for OutlookItem
type OutlookItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns OutlookItemRequest
func (b *OutlookItemRequestBuilder) Request() *OutlookItemRequest {
	return &OutlookItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OutlookItemRequest is request for OutlookItem
type OutlookItemRequest struct{ BaseRequest }

// Get performs GET request for OutlookItem
func (r *OutlookItemRequest) Get(ctx context.Context) (resObj *OutlookItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OutlookItem
func (r *OutlookItemRequest) Update(ctx context.Context, reqObj *OutlookItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OutlookItem
func (r *OutlookItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for OutlookItem
func (r *OutlookItemRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj OutlookItem
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for OutlookItem
func (r *OutlookItemRequest) BatchUpdate(batch *BatchRequest, reqObj *OutlookItem) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for OutlookItem
func (r *OutlookItemRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// OutlookUserRequestBuilder is request builder for OutlookUser
type OutlookUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns OutlookUserRequest
func (b *OutlookUserRequestBuilder) Request() *OutlookUserRequest {
	return &OutlookUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// OutlookUserRequest is request for OutlookUser
type OutlookUserRequest struct{ BaseRequest }

// Get performs GET request for OutlookUser
func (r *OutlookUserRequest) Get(ctx context.Context) (resObj *OutlookUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for OutlookUser
func (r *OutlookUserRequest) Update(ctx context.Context, reqObj *OutlookUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for OutlookUser
func (r *OutlookUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for OutlookUser
func (r *OutlookUserRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj OutlookUser
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for OutlookUser
func (r *OutlookUserRequest) BatchUpdate(batch *BatchRequest, reqObj *OutlookUser) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for OutlookUser
func (r *OutlookUserRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
