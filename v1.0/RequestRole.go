// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// RoleAssignmentRequestBuilder is request builder for RoleAssignment
type RoleAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns RoleAssignmentRequest
func (b *RoleAssignmentRequestBuilder) Request() *RoleAssignmentRequest {
	return &RoleAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RoleAssignmentRequest is request for RoleAssignment
type RoleAssignmentRequest struct{ BaseRequest }

// Get performs GET request for RoleAssignment
func (r *RoleAssignmentRequest) Get(ctx context.Context) (resObj *RoleAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RoleAssignment
func (r *RoleAssignmentRequest) Update(ctx context.Context, reqObj *RoleAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RoleAssignment
func (r *RoleAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for RoleAssignment
func (r *RoleAssignmentRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj RoleAssignment
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for RoleAssignment
func (r *RoleAssignmentRequest) BatchUpdate(batch *BatchRequest, reqObj *RoleAssignment) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for RoleAssignment
func (r *RoleAssignmentRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// RoleDefinitionRequestBuilder is request builder for RoleDefinition
type RoleDefinitionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RoleDefinitionRequest
func (b *RoleDefinitionRequestBuilder) Request() *RoleDefinitionRequest {
	return &RoleDefinitionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RoleDefinitionRequest is request for RoleDefinition
type RoleDefinitionRequest struct{ BaseRequest }

// Get performs GET request for RoleDefinition
func (r *RoleDefinitionRequest) Get(ctx context.Context) (resObj *RoleDefinition, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RoleDefinition
func (r *RoleDefinitionRequest) Update(ctx context.Context, reqObj *RoleDefinition) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RoleDefinition
func (r *RoleDefinitionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for RoleDefinition
func (r *RoleDefinitionRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj RoleDefinition
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for RoleDefinition
func (r *RoleDefinitionRequest) BatchUpdate(batch *BatchRequest, reqObj *RoleDefinition) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for RoleDefinition
func (r *RoleDefinitionRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
