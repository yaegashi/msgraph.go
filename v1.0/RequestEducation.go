// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// EducationClassRequestBuilder is request builder for EducationClass
type EducationClassRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationClassRequest
func (b *EducationClassRequestBuilder) Request() *EducationClassRequest {
	return &EducationClassRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationClassRequest is request for EducationClass
type EducationClassRequest struct{ BaseRequest }

// Get performs GET request for EducationClass
func (r *EducationClassRequest) Get(ctx context.Context) (resObj *EducationClass, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationClass
func (r *EducationClassRequest) Update(ctx context.Context, reqObj *EducationClass) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationClass
func (r *EducationClassRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for EducationClass
func (r *EducationClassRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj EducationClass
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for EducationClass
func (r *EducationClassRequest) BatchUpdate(batch *BatchRequest, reqObj *EducationClass) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for EducationClass
func (r *EducationClassRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// EducationRootRequestBuilder is request builder for EducationRoot
type EducationRootRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationRootRequest
func (b *EducationRootRequestBuilder) Request() *EducationRootRequest {
	return &EducationRootRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationRootRequest is request for EducationRoot
type EducationRootRequest struct{ BaseRequest }

// Get performs GET request for EducationRoot
func (r *EducationRootRequest) Get(ctx context.Context) (resObj *EducationRoot, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationRoot
func (r *EducationRootRequest) Update(ctx context.Context, reqObj *EducationRoot) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationRoot
func (r *EducationRootRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for EducationRoot
func (r *EducationRootRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj EducationRoot
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for EducationRoot
func (r *EducationRootRequest) BatchUpdate(batch *BatchRequest, reqObj *EducationRoot) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for EducationRoot
func (r *EducationRootRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// EducationSchoolRequestBuilder is request builder for EducationSchool
type EducationSchoolRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSchoolRequest
func (b *EducationSchoolRequestBuilder) Request() *EducationSchoolRequest {
	return &EducationSchoolRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSchoolRequest is request for EducationSchool
type EducationSchoolRequest struct{ BaseRequest }

// Get performs GET request for EducationSchool
func (r *EducationSchoolRequest) Get(ctx context.Context) (resObj *EducationSchool, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSchool
func (r *EducationSchoolRequest) Update(ctx context.Context, reqObj *EducationSchool) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSchool
func (r *EducationSchoolRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for EducationSchool
func (r *EducationSchoolRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj EducationSchool
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for EducationSchool
func (r *EducationSchoolRequest) BatchUpdate(batch *BatchRequest, reqObj *EducationSchool) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for EducationSchool
func (r *EducationSchoolRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// EducationUserRequestBuilder is request builder for EducationUser
type EducationUserRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationUserRequest
func (b *EducationUserRequestBuilder) Request() *EducationUserRequest {
	return &EducationUserRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationUserRequest is request for EducationUser
type EducationUserRequest struct{ BaseRequest }

// Get performs GET request for EducationUser
func (r *EducationUserRequest) Get(ctx context.Context) (resObj *EducationUser, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationUser
func (r *EducationUserRequest) Update(ctx context.Context, reqObj *EducationUser) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationUser
func (r *EducationUserRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for EducationUser
func (r *EducationUserRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj EducationUser
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for EducationUser
func (r *EducationUserRequest) BatchUpdate(batch *BatchRequest, reqObj *EducationUser) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for EducationUser
func (r *EducationUserRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
