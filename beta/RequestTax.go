// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// TaxAreaRequestBuilder is request builder for TaxArea
type TaxAreaRequestBuilder struct{ BaseRequestBuilder }

// Request returns TaxAreaRequest
func (b *TaxAreaRequestBuilder) Request() *TaxAreaRequest {
	return &TaxAreaRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TaxAreaRequest is request for TaxArea
type TaxAreaRequest struct{ BaseRequest }

// Get performs GET request for TaxArea
func (r *TaxAreaRequest) Get(ctx context.Context) (resObj *TaxArea, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TaxArea
func (r *TaxAreaRequest) Update(ctx context.Context, reqObj *TaxArea) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TaxArea
func (r *TaxAreaRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for TaxArea
func (r *TaxAreaRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj TaxArea
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for TaxArea
func (r *TaxAreaRequest) BatchUpdate(batch *BatchRequest, reqObj *TaxArea) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for TaxArea
func (r *TaxAreaRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// TaxGroupRequestBuilder is request builder for TaxGroup
type TaxGroupRequestBuilder struct{ BaseRequestBuilder }

// Request returns TaxGroupRequest
func (b *TaxGroupRequestBuilder) Request() *TaxGroupRequest {
	return &TaxGroupRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TaxGroupRequest is request for TaxGroup
type TaxGroupRequest struct{ BaseRequest }

// Get performs GET request for TaxGroup
func (r *TaxGroupRequest) Get(ctx context.Context) (resObj *TaxGroup, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TaxGroup
func (r *TaxGroupRequest) Update(ctx context.Context, reqObj *TaxGroup) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TaxGroup
func (r *TaxGroupRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for TaxGroup
func (r *TaxGroupRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj TaxGroup
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for TaxGroup
func (r *TaxGroupRequest) BatchUpdate(batch *BatchRequest, reqObj *TaxGroup) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for TaxGroup
func (r *TaxGroupRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
