// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// FileClassificationRequestObjectRequestBuilder is request builder for FileClassificationRequestObject
type FileClassificationRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileClassificationRequestObjectRequest
func (b *FileClassificationRequestObjectRequestBuilder) Request() *FileClassificationRequestObjectRequest {
	return &FileClassificationRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileClassificationRequestObjectRequest is request for FileClassificationRequestObject
type FileClassificationRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Get(ctx context.Context) (resObj *FileClassificationRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Update(ctx context.Context, reqObj *FileClassificationRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj FileClassificationRequestObject
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) BatchUpdate(batch *BatchRequest, reqObj *FileClassificationRequestObject) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for FileClassificationRequestObject
func (r *FileClassificationRequestObjectRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// FileSecurityProfileRequestBuilder is request builder for FileSecurityProfile
type FileSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns FileSecurityProfileRequest
func (b *FileSecurityProfileRequestBuilder) Request() *FileSecurityProfileRequest {
	return &FileSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// FileSecurityProfileRequest is request for FileSecurityProfile
type FileSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Get(ctx context.Context) (resObj *FileSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Update(ctx context.Context, reqObj *FileSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for FileSecurityProfile
func (r *FileSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for FileSecurityProfile
func (r *FileSecurityProfileRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj FileSecurityProfile
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for FileSecurityProfile
func (r *FileSecurityProfileRequest) BatchUpdate(batch *BatchRequest, reqObj *FileSecurityProfile) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for FileSecurityProfile
func (r *FileSecurityProfileRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
