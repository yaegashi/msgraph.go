// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// PaymentMethodRequestBuilder is request builder for PaymentMethod
type PaymentMethodRequestBuilder struct{ BaseRequestBuilder }

// Request returns PaymentMethodRequest
func (b *PaymentMethodRequestBuilder) Request() *PaymentMethodRequest {
	return &PaymentMethodRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PaymentMethodRequest is request for PaymentMethod
type PaymentMethodRequest struct{ BaseRequest }

// Get performs GET request for PaymentMethod
func (r *PaymentMethodRequest) Get(ctx context.Context) (resObj *PaymentMethod, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PaymentMethod
func (r *PaymentMethodRequest) Update(ctx context.Context, reqObj *PaymentMethod) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PaymentMethod
func (r *PaymentMethodRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for PaymentMethod
func (r *PaymentMethodRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj PaymentMethod
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for PaymentMethod
func (r *PaymentMethodRequest) BatchUpdate(batch *BatchRequest, reqObj *PaymentMethod) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for PaymentMethod
func (r *PaymentMethodRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// PaymentTermRequestBuilder is request builder for PaymentTerm
type PaymentTermRequestBuilder struct{ BaseRequestBuilder }

// Request returns PaymentTermRequest
func (b *PaymentTermRequestBuilder) Request() *PaymentTermRequest {
	return &PaymentTermRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PaymentTermRequest is request for PaymentTerm
type PaymentTermRequest struct{ BaseRequest }

// Get performs GET request for PaymentTerm
func (r *PaymentTermRequest) Get(ctx context.Context) (resObj *PaymentTerm, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PaymentTerm
func (r *PaymentTermRequest) Update(ctx context.Context, reqObj *PaymentTerm) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PaymentTerm
func (r *PaymentTermRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for PaymentTerm
func (r *PaymentTermRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj PaymentTerm
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for PaymentTerm
func (r *PaymentTermRequest) BatchUpdate(batch *BatchRequest, reqObj *PaymentTerm) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for PaymentTerm
func (r *PaymentTermRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
