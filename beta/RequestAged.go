// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"strings"
)

// AgedAccountsPayableRequestBuilder is request builder for AgedAccountsPayable
type AgedAccountsPayableRequestBuilder struct{ BaseRequestBuilder }

// Request returns AgedAccountsPayableRequest
func (b *AgedAccountsPayableRequestBuilder) Request() *AgedAccountsPayableRequest {
	return &AgedAccountsPayableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AgedAccountsPayableRequest is request for AgedAccountsPayable
type AgedAccountsPayableRequest struct{ BaseRequest }

// Get performs GET request for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) Get(ctx context.Context) (resObj *AgedAccountsPayable, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) Update(ctx context.Context, reqObj *AgedAccountsPayable) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj AgedAccountsPayable
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) BatchUpdate(batch *BatchRequest, reqObj *AgedAccountsPayable) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for AgedAccountsPayable
func (r *AgedAccountsPayableRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}

// AgedAccountsReceivableRequestBuilder is request builder for AgedAccountsReceivable
type AgedAccountsReceivableRequestBuilder struct{ BaseRequestBuilder }

// Request returns AgedAccountsReceivableRequest
func (b *AgedAccountsReceivableRequestBuilder) Request() *AgedAccountsReceivableRequest {
	return &AgedAccountsReceivableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// AgedAccountsReceivableRequest is request for AgedAccountsReceivable
type AgedAccountsReceivableRequest struct{ BaseRequest }

// Get performs GET request for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) Get(ctx context.Context) (resObj *AgedAccountsReceivable, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) Update(ctx context.Context, reqObj *AgedAccountsReceivable) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// BatchGet adds Get operation to Batch for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) BatchGet(batch *BatchRequest) error {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	var resObj AgedAccountsReceivable
	return batch.Add("GET", strings.TrimPrefix(r.baseURL+query, defaultBaseURL), nil, resObj)
}

// BatchUpdate adds Update operation to Batch for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) BatchUpdate(batch *BatchRequest, reqObj *AgedAccountsReceivable) error {
	return batch.Add("PATCH", strings.TrimPrefix(r.baseURL, defaultBaseURL), reqObj, nil)
}

// BatchDelete adds Delete operation to Batch for AgedAccountsReceivable
func (r *AgedAccountsReceivableRequest) BatchDelete(batch *BatchRequest) error {
	return batch.Add("DELETE", strings.TrimPrefix(r.baseURL, defaultBaseURL), nil, nil)
}
